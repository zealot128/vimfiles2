########################################
# Ruby snippets - for Rails, see below #
########################################

# encoding for Ruby 1.9
snippet enc
	# encoding: utf-8

# #!/usr/bin/env ruby
snippet #!
	#!/usr/bin/env ruby
	# encoding: utf-8

snippet req require
	require "${1}"${2}
snippet case
	case ${1:object}
	when ${2:condition}
		${3}
	end
snippet def
	def ${1:method_name}
		${2}
	end
snippet if
	if ${1:condition}
		${2}
	end
snippet ife
	if ${1:condition}
		${2}
	else
		${3}
	end
snippet unless
	unless ${1:condition}
		${2}
	end
snippet class
	class ${1:`substitute(Filename(), '\(_\|^\)\(.\)', '\u\2', 'g')`}
		def initialize(${2:args})
			${3}
		end
	end
snippet module
	module ${1:`substitute(Filename(), '\(_\|^\)\(.\)', '\u\2', 'g')`}
		${2}
	end
# attr_reader
snippet r
	attr_reader :${1:attr_names}
# attr_writer
snippet w
	attr_writer :${1:attr_names}
# attr_accessor
snippet rw
	attr_accessor :${1:attr_names}
# def initialize
snippet init
	def initialize(${1:args})
		${2}
	end

#debugging
snippet pry
	require 'pry'; binding.pry

#############################################
# Rails snippets - for pure Ruby, see above #
#############################################
snippet bt
	belongs_to :${1:association}
snippet habtm
	has_and_belongs_to_many :${1:object}, :join_table => "", :foreign_key => "", association_foreign_key: "_id"
snippet hm
	has_many :${1:other}s, :class_name => "${2:$1}", :foreign_key => "${3:$1}_id", :dependent => :destroy${4}
snippet hmt
	has_many :${1:object}, :through => :${2:object}
snippet ho
	has_one :${1:object}, dependent: :${2:destroy}
##########################
#     Rspec snippets     #
##########################
snippet desc
	require "spec_helper"
	describe ${1:`substitute(Filename(), '\(_\|^\)\(.\)', '\u\2', 'g')`} do
		${2}
	end
snippet descm
	describe "${1:#method}" do
		${2:pending "Not implemented"}
	end
snippet bfe
	before :${1:each} do
		${2}
	end
snippet let
	let(:${1:object}) ${2}
snippet it
	it "${1:spec_name}" do
		${2}
	end
