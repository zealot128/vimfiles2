########################################
# Ruby snippets - for Rails, see below #
########################################
snippet if
	if ${1:condition}
		${2}
	end
snippet ife
	if ${1:condition}
		${2}
	else
		${3}
	end
snippet unless
	unless ${1:condition}
		${2}
	end
snippet class
	class ${1:`substitute(Filename(), '\(_\|^\)\(.\)', '\u\2', 'g')`}
		def initialize(${2:args})
			${3}
		end
	end
snippet module
	module ${1:`substitute(Filename(), '\(_\|^\)\(.\)', '\u\2', 'g')`}
		${2}
	end
# attr_reader
snippet r
	attr_reader :${1:attr_names}
# attr_writer
snippet w
	attr_writer :${1:attr_names}
# attr_accessor
snippet rw
	attr_accessor :${1:attr_names}
# def initialize
snippet init
	def initialize(${1:args})
		${2}
	end

#debugging
snippet pry
	require 'pry'; binding.pry

#############################################
# Rails snippets - for pure Ruby, see above #
#############################################
snippet bt
	belongs_to :${1:association}
snippet habtm
	has_and_belongs_to_many :${1:object}, join_table: "", foreign_key: "", association_foreign_key: "_id"
snippet hm
	has_many :${1:other}s, class_name: "${2:$1}", foreign_key: "${3:$1}_id", dependent: :destroy${4}
snippet hmt
	has_many :${1:object}, through: :${2:object}
snippet ho
	has_one :${1:object}, dependent: :${2:destroy}
##########################
#     Rspec snippets     #
##########################
snippet spec!
	require "spec_helper"
	describe ${1:`substitute(Filename(), '\(_\|^\)\(.\)', '\u\2', 'g')`} do
		${2}
	end
